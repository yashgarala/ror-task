
def isprime(n)
    return false if(n<=1)
    i=2
    while(i*i<=n)
        return false if(n%i==0)
        i+=1
    end
    return true
end
def count_prime(p,i)
    prime=0
    i.times do 
        if(!isprime(p))
            return prime
        end
        p=2*p+1
        prime+=1
    end
    return prime

end
def double_and_add_one(n,i)
    arr_hash=Hash.new
    arr=[]

    n.downto(2)   do |j|
        
        if(!isprime(j))
            arr_hash[j]=0
            next
        end
        p=2*j+1
        if(p>=n)
            arr_hash[j]=count_prime(p,i)+1
        else
            arr_hash[j]=arr_hash[p] + 1
        end
        if(arr_hash[j]>i)
            arr<<j
        end
    end
    p arr
end

n=gets.chomp.to_i
i=gets.chomp.to_i
double_and_add_one(n,i)