Q1 Write a query that will return all authors with the count of all their books
ans :- Author.joins(:books).group("authors.name").count("books.author_id")
	
Q2 Write a query to get the count of authors who have published at least one book.
 ans :- Author.joins(:books).select("authors.id").where("books.published==true").distinct.count
 
Q3 Write a query to retrieve authors whose book sold more than 20 times.
ans:- Author.joins(:books).select("authors.name").where("books.sold_quantity>20")
  
Q4 Write a query to get the authors whose book rating is greater than 3.5
 
 Author.joins(books: :reviews).where("reviews.ratings>3.5")
 
Q5 Write a query to get top 10 sold books
ans:- Book.all.order("sold_quantity desc").limit(10) 

Q6 Write a query to get top 20 sold books in last month
ans:- Book.where(created_at:(Time.now-1.month)..Time.now).limit(20)
 
Q7 Write a query to get top 10 sold books in last week
ans:-  Book.where(created_at:(Time.now-1.week)..Time.now).limit(10)
 
Q8 Write a query to get top 10 sold books in last day 
ans :-  Book.where(created_at:(Time.now-1.day)..Time.now).limit(10)

Q9 Write a query to get the books which reviews contains a "nice"
 ans :- join use INNER JOIN databse query the records with conditions on

Q10 Note down difference between joins and includes
joins on the one hand generate an INNER JOIN database query. Which can be used to query the records with conditions on the joined table. joins 
does not eager load associated records.

includes use-case, on the other hand, is to eager load associated records and avoid N+1 queries. Rails might use a database join to load the 
records and their associated records in one go. Or it might fire two queries to fetch all required records. There is no guarantee that it will 
always do a database JOIN.



Q11 Try different types of joins:

INNER JOIN: The INNER JOIN keyword selects all rows from both the tables as long as the condition satisfies. This keyword will create the result-set by combining all rows from both the tables where the condition satisfies i.e value of the common field will be same.
LEFT JOIN: This join returns all the rows of the table on the left side of the join and matching rows for the table on the right side of join. The rows for which there is no matching row on right side, the result-set will contain null. LEFT JOIN is also known as LEFT OUTER JOIN.


